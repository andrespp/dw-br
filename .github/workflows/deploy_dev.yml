name: Deploy to dev VM

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

env:
  GIT_REPO: "git@github.com:andrespp/dw-br.git"
  GIT_BRANCH: "dev"
  APP_PATH: "/home/dwbr/dw-br"
  CONDA_ENV: "dwbra"
  SHA: ${{ github.sha }}

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to dev VM using ssh-action
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEV_HOST }}
        username: ${{ secrets.DEV_HOST_USERNAME }}
        key: ${{ secrets.DEV_HOST_KEY}}
        port: ${{ secrets.DEV_HOST_PORT }}
        command_timeout: 120m
        envs: GIT_REPO, GIT_BRANCH, APP_PATH, CONDA_ENV, SHA
        script: |

          # Echo env variables
          echo $GIT_REPO
          echo $GIT_BRANCH
          echo $APP_PATH
          echo $CONDA_ENV
          echo $SHA

          # Check if repo exists, then update repo
          if [ -d $APP_PATH ] ; then
            cd $APP_PATH
            git pull origin $GIT_BRANCH
            # Run ETL
            make setup
            make getds
            make extractds
            make run

          else # Build from scratch

            # Clone repo
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            GIT_SSH_COMMAND="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
            git clone --branch $GIT_BRANCH $GIT_REPO $APP_PATH
            cd $APP_PATH

            # Run ETL
            docker compose up -d
            make setup
            make getds
            make extractds
            make run
          fi

