#!/usr/bin/env python3
"""update-dw
"""
import time
import app
import modules.etl as etl
from modules.cli import args
from dw import aux_dw_updates

# Track execution time
start_time = time.time()

# Script setup
# CONFIG_FILE=args.config_file
COMMAND=args.subparser_name
# DATASETS=etl.datasets

if __name__ == '__main__':

    # Read configuration File
    app.init_app()

    # Read Commands
    if COMMAND is None: # Build all DW
        ds_group = 'all'
        ds_name = 'all'
        ds_table = 'all'

    if COMMAND == 'all': # Build all DW
        ds_group = 'all'
        ds_name = args.datasets
        ds_table = 'all'

    elif COMMAND=='table': # Build specific tables
        ds_group = 'all'
        ds_name = 'all'
        ds_table = args.tables

    elif COMMAND in ['stg', 'dim', 'fact']: # Build specific table group
        ds_group = COMMAND
        ds_name = args.dataset
        ds_table = 'all'

    # Trigger builds
    etl.trigger_etl(
        ds_name, args.target, args.no_sample, ds_group, ds_table, app.VERBOSE
    )

    # Post Processing
    elapsed_time = (time.time() - start_time) / 60
    if(app.VERBOSE): print("\n# Building auxiliary tables")
    aux_dw_updates.load(
                app.DWO, hostname=app.CONFIG['ETL']['HOST'],
                elapsed_time=elapsed_time,
                truncate=False,
                verbose=app.VERBOSE
            )

    # Print out elapsed time
    if(app.VERBOSE):
        print("\nExecution time: {0:0.4f} minutes.".format(elapsed_time))
